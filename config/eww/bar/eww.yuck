;; Created  by https://github.com/niraj998
;; Designed by https://github.com/rxyhn

;; put path to sidebar config files here ;;
(defvar eww "eww -c ~/.config/eww/bar")

;; launcher ;;
(defwidget lunch []
	(box :orientation "v" :space-evenly "false" :spacing -15
  (button :class "launcher_icon" :onclick "./scripts/popup launcher"  "")))

;; Workspaces ;;
(defwidget workspaces []
	(literal :content workspace))
(deflisten workspace "./scripts/workspace")

;; Battery ;;
;;;;	battery	;;;;
(defwidget bat []
	(box	:orientation "v"	:space-evenly "false"
	(label	:class "bat"		:halign "end"		:text battery	:tooltip "Battery: ${battery-cappacity}%")))
(defpoll battery			:interval "10m"	"scripts/battery icon")
(defpoll battery-cappacity	:interval "5m"	"scripts/battery percent")

;; Brightness ;;
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"   :onhoverlost "${eww} update bright=false"
  (box    :orientation "v"  :space-evenly "false"  :spacing 2
  (revealer :transition "slideup" :reveal bright   :duration "550ms"
  (scale :class "bribar" :value current-brightness :tooltip "Brightness: ${current-brightness}%" :onchange "brightnessctl set {}%" :orientation "v" :flipped true :max 101 :min 0))
  (label :class "brightness-icon" :text ""))))

(defpoll current-brightness :interval "1s" "brightnessctl -m -d amdgpu_bl0 | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defvar bright false)

;; Wifi ;;
(defwidget wifi []
 (box		:orientation "v"  :tooltip wifi-name
 (button	:onclick "./scripts/popup wifi" :class "wifi-icon" wifi-icon)))

(defpoll wifi-icon :interval "1m" "./scripts/wifi icon")
(defpoll wifi-name :interval "10m" "./scripts/wifi name")

;; Volume ;;
(defwidget volum []
  (eventbox :onhover "${eww} update volum=true" 		:onhoverlost "${eww} update volum=false"
  (box      :orientation "v" 	  :space-evenly "false" :spacing "2"
  (revealer :transition "slideup" :reveal volum         :duration "550ms"
  (scale    :class "volbar" 	  :value current-volume :orientation "v"      :flipped true :tooltip "Volume: ${current-volume}%" :max 101 :min 0 :onchange "amixer -D pulse sset Master {}%" ))
  (button   :onclick "./scripts/popup audio"   :class "volume-icon" ""))))

(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volum false)

;;	time	;;
(defwidget time []
	(box	:orientation "v" :class "time" :valign "end"
	(button	:onclick "scripts/popup calendar"	:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"	:class "time-min"  min)))

(defpoll hour	:interval "45s"	"date '+%H'")
(defpoll min	:interval "45s"	"date '+%M'")

;; CALENDAR ;;
(defwidget cal []
	(box :class "cal-box" :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" :day calendar_day :month calendar_month :year calendar_year))))

(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

;;	Power	;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"	:onhoverlost "${eww} update power=false" 
	(box		:orientation "v"	:space-evenly "false" :vexpand "false" :class "powermenu"
	(revealer	:transition "slideup"	:reveal power		:duration "550ms"
	(box		:orientation "v"	:space-evenly "false"
	(button   	:class "button-bspres"  :tooltip "BSPWM Restart" :onclick "bspc wm -r" "" )
  	(button		:class "button-reb"		:tooltip "Reboot"		 :onclick "reboot"	"")
	(button		:class "button-quit" 	:tooltip "Logout" 		 :onclick "killall bspwm" "")
	(button		:class "button-lock" 	:tooltip "Lock Screen"	 :onclick "betterlockscreen -l"	"")))
	(button		:class "button-off"		:tooltip "Shutdown"		 :onclick "shutdown now"	""))))

(defvar power false)

;; Bar ;;
(defwindow bar
	:geometry (geometry :x "1%" :y "2%" :height "96%" :width "40px" )
	:monitor 0
	:reserve (struts :distance "35px" :side "left")
	:wm-ignore false
	:hexpand "false"
	:vexpand "false"
  	(bar))

(defwindow calendar
	:geometry (geometry 
	:x "75px" 
	:y "65%" 
	:width "270px" 
	:height "60px")
			(cal))

(defwidget bar []
	(box :class "eww_bar" :orientation "v" :vexpand "false" :hexpand "false"
		(top)
		(end)))

;; Top ;;
(defwidget top []
	(box	:orientation "v" :space-evenly "false" :valign "start" 
  (lunch)
  (workspaces)))

;; Bottom ;;
(defwidget end []
	(box :orientation "v" :space-evenly "false" :valign "end" :spacing 5
  (control)
  (bottom)))

(defwidget control []
	(box :orientation "v" :space-evenly false  :class "control"
  (bat)
  (wifi)
  (bright)
  (volum)))

(defwidget bottom []
	(box	:orientation "v" :space-evenly false 
  (time)
  (power)))


